#N struct 1009-f float x;
#N canvas 327 79 766 758 10;
#N canvas 0 0 450 300 \$0-f 0;
#X obj 59 51 struct \$0-f float x;
#X restore 453 61 pd \$0-f;
#N canvas 0 0 450 300 \$0-sort 0;
#X scalar 1009-f 161 \;;
#X scalar 1009-f 481 \;;
#X scalar 1009-f 509 \;;
#X scalar 1009-f 645 \;;
#X scalar 1009-f 695 \;;
#X scalar 1009-f 760 \;;
#X scalar 1009-f 770 \;;
#X scalar 1009-f 907 \;;
#X scalar 1009-f 994 \;;
#X scalar 1009-f 1212 \;;
#X restore 453 91 pd \$0-sort;
#X obj 211 238 pointer;
#X msg 211 214 traverse \$1 \, bang;
#X obj 123 263 append \$0-f x;
#X msg 365 180 clear;
#X obj 365 205 s pd-\$0-sort;
#X obj 318 384 s pd-\$0-sort;
#X msg 318 364 sort;
#X obj 103 53 inlet;
#X obj 211 190 symbol pd-\$0-sort;
#X obj 128 443 pointer;
#X obj 176 364 symbol pd-\$0-sort;
#X obj 128 566 list prepend;
#X obj 223 566 t a;
#X obj 128 494 get \$0-f x;
#X obj 103 650 list;
#X msg 128 408 next;
#X obj 103 675 outlet;
#X text 460 673 2011 Frank Barknecht;
#X obj 357 566 t a;
#X obj 655 107 loadbang;
#X obj 593 59 inlet;
#X obj 593 168 list append \$1;
#X obj 593 138 t b a;
#X obj 593 196 s \$0-direction;
#X obj 262 566 list append;
#N canvas 0 0 552 424 direction 0;
#X obj 40 52 inlet;
#X obj 255 49 inlet;
#X obj 40 266 spigot 1;
#X obj 153 266 spigot;
#X obj 255 223 unpack 0 0;
#X msg 255 177 1 0;
#X msg 306 195 0 1;
#X obj 357 92 select 0;
#X obj 255 70 select asc desc;
#X obj 40 317 outlet;
#X obj 153 322 outlet;
#X connect 0 0 2 0;
#X connect 0 0 3 0;
#X connect 1 0 8 0;
#X connect 2 0 9 0;
#X connect 3 0 10 0;
#X connect 4 0 2 1;
#X connect 4 1 3 1;
#X connect 5 0 4 0;
#X connect 6 0 4 0;
#X connect 7 0 5 0;
#X connect 7 1 6 0;
#X connect 8 0 5 0;
#X connect 8 1 6 0;
#X connect 8 2 7 0;
#X restore 128 530 pd direction;
#X obj 209 508 r \$0-direction;
#X obj 123 189 list-rdrip;
#N canvas 0 0 626 259 filter-f 0;
#X obj 171 142 print;
#X obj 171 86 b;
#X obj 97 35 inlet;
#X obj 97 57 route float;
#X msg 171 112 list-sort: Warning: dropped a non-number from list;
#X obj 97 87 outlet;
#X connect 1 0 4 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 3 1 1 0;
#X connect 4 0 0 0;
#X restore 123 214 pd filter-f;
#X text 306 630 This list-sorting algorithm uses a data structure subpatch
to sort the list.;
#X obj 103 294 list length;
#X obj 103 138 t a a b b;
#X obj 128 365 until;
#X msg 176 388 traverse \$1;
#X obj 103 328 t b f b b b b b b;
#X connect 2 0 4 1;
#X connect 3 0 2 0;
#X connect 5 0 6 0;
#X connect 8 0 7 0;
#X connect 9 0 33 0;
#X connect 10 0 3 0;
#X connect 11 0 15 0;
#X connect 11 1 34 1;
#X connect 12 0 35 0;
#X connect 13 0 14 0;
#X connect 13 0 16 1;
#X connect 14 0 13 1;
#X connect 15 0 27 0;
#X connect 16 0 18 0;
#X connect 17 0 11 0;
#X connect 20 0 26 1;
#X connect 21 0 23 0;
#X connect 22 0 24 0;
#X connect 23 0 25 0;
#X connect 24 0 23 0;
#X connect 24 1 23 1;
#X connect 26 0 20 0;
#X connect 26 0 16 1;
#X connect 27 0 13 0;
#X connect 27 1 26 0;
#X connect 28 0 27 1;
#X connect 29 0 30 0;
#X connect 30 0 4 0;
#X connect 32 0 36 0;
#X connect 33 0 32 0;
#X connect 33 1 29 0;
#X connect 33 2 10 0;
#X connect 33 3 5 0;
#X connect 33 3 16 1;
#X connect 34 0 17 0;
#X connect 35 0 11 0;
#X connect 36 0 16 0;
#X connect 36 1 34 0;
#X connect 36 2 12 0;
#X connect 36 5 13 1;
#X connect 36 6 26 1;
#X connect 36 7 8 0;
