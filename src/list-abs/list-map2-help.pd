#N canvas 0 31 725 634 10;
#X obj 135 300 spigot;
#X obj 171 283 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 67 366 print MAIN;
#X obj 381 329 print SERIALIZED;
#X obj 323 358 print MAIN;
#X msg 67 235 bang;
#X msg 131 256 a b c;
#X msg 323 224 bang;
#X msg 72 427 0 1 2 3;
#X obj 72 516 list trim;
#X obj 72 496 list prepend set;
#X obj 158 451 list append -|-;
#X msg 227 521 set;
#X msg 71 401 bang;
#X obj 325 512 list trim;
#X obj 325 492 list prepend set;
#X msg 325 425 1 2 3 4 5;
#X obj 323 292 list-map2;
#X obj 411 292 +;
#X msg 352 269 10 20 30 40;
#X msg 323 248 1 2 3 4;
#X msg 130 429 a b c d;
#X obj 67 300 list-map2;
#X obj 325 470 list-map2;
#X obj 72 451 list-map2;
#X msg 354 446 2 0;
#X obj 397 470 *;
#X text 64 57 Calls a user-defined operation for each pair of elements
of two incoming lists and returns a list of the return values.;
#X obj 125 339 print SERIALIZED_PAIRS;
#X text 64 100 [list-map2] is a helper abstraction to make element-wise
operations on two lists easy to patch. The basic idea is to bundle
two list-serializers and a list-repacker into one object. Then you
connect whatever operation should be applied on every pair of list
items to the right outlet and send the modified items back to the right
inlet. Here the modified elements get packed into a list again and
sent to the left outlet of [list-map2].;
#N canvas 239 121 843 692 more-examples 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-in1 64 float 0;
#X coords 0 1 63 -1 128 60 1;
#X restore 366 91 graph;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-in2 64 float 0;
#X coords 0 1 63 -1 128 60 1;
#X restore 508 91 graph;
#X msg 68 83 bang;
#N canvas 0 0 297 280 noise 0;
#X obj 33 115 random 1000;
#X obj 33 88 t b a;
#X obj 33 143 / 500;
#X obj 33 163 - 1;
#X msg 33 44 64;
#N canvas 0 0 450 300 countto 0;
#X obj 163 151 f 0;
#X obj 190 151 + 1;
#X obj 163 109 until;
#X msg 205 111 0;
#X obj 163 180 outlet;
#X obj 163 39 inlet;
#X obj 163 87 t a b;
#X connect 0 0 1 0;
#X connect 0 0 4 0;
#X connect 1 0 0 1;
#X connect 2 0 0 0;
#X connect 3 0 0 1;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X connect 6 1 3 0;
#X restore 33 66 pd countto;
#X obj 33 21 inlet;
#X obj 33 194 tabwrite \$0-in2;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 1 1 7 1;
#X connect 2 0 3 0;
#X connect 3 0 7 0;
#X connect 4 0 5 0;
#X connect 5 0 1 0;
#X connect 6 0 4 0;
#X restore 508 52 pd noise;
#X msg 508 28 make noise;
#X msg 527 184 const 0;
#X obj 527 280 s \$0-out;
#X text 586 168 impulse;
#X obj 149 164 list-map2;
#N canvas 414 307 598 380 tabdump-ins 0;
#X obj 187 213 list prepend;
#X obj 278 213 t a;
#X obj 125 254 list;
#X obj 125 23 inlet;
#X obj 125 279 outlet;
#X msg 187 92 64;
#N canvas 0 0 450 300 countto 0;
#X obj 163 151 f 0;
#X obj 190 151 + 1;
#X obj 163 109 until;
#X msg 205 111 0;
#X obj 163 180 outlet;
#X obj 163 39 inlet;
#X obj 163 87 t a b;
#X connect 0 0 1 0;
#X connect 0 0 4 0;
#X connect 1 0 0 1;
#X connect 2 0 0 0;
#X connect 3 0 0 1;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X connect 6 1 3 0;
#X restore 187 114 pd countto;
#X obj 187 136 t a a;
#X obj 320 213 list prepend;
#X obj 411 213 t a;
#X obj 320 190 tabread \$0-in2;
#X obj 187 190 tabread \$0-in1;
#X obj 187 256 list;
#X obj 187 281 outlet;
#X obj 125 46 t b b b b b;
#X connect 0 0 2 1;
#X connect 0 0 1 0;
#X connect 1 0 0 1;
#X connect 2 0 4 0;
#X connect 3 0 14 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 11 0;
#X connect 7 1 10 0;
#X connect 8 0 9 0;
#X connect 8 0 12 1;
#X connect 9 0 8 1;
#X connect 10 0 8 0;
#X connect 11 0 0 0;
#X connect 12 0 13 0;
#X connect 14 0 2 0;
#X connect 14 1 12 0;
#X connect 14 2 5 0;
#X connect 14 3 0 1;
#X connect 14 4 8 1;
#X restore 149 134 pd tabdump-ins;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-out-max 64 float 0;
#X coords 0 1 63 -1 128 60 1;
#X restore 363 174 graph;
#X obj 149 192 list prepend 0;
#X obj 527 225 s \$0-in1;
#X msg 588 184 const 0 \, 16 1;
#X obj 231 165 max;
#X obj 527 249 s \$0-in2;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-out-min 64 float 0;
#X coords 0 1 63 -1 128 60 1;
#X restore 364 274 graph;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-out-mul 64 float 0;
#X coords 0 1 63 -1 128 60 1;
#X restore 364 398 graph;
#X obj 150 277 list-map2;
#X obj 150 305 list prepend 0;
#X obj 150 327 s \$0-out-min;
#X obj 232 278 min;
#X obj 150 390 list-map2;
#X obj 150 418 list prepend 0;
#X obj 232 391 *;
#X obj 150 440 s \$0-out-mul;
#X obj 149 214 s \$0-out-max;
#N canvas 414 307 598 380 tabdump-ins 0;
#X obj 187 213 list prepend;
#X obj 278 213 t a;
#X obj 125 254 list;
#X obj 125 23 inlet;
#X obj 125 279 outlet;
#X msg 187 92 64;
#N canvas 0 0 450 300 countto 0;
#X obj 163 151 f 0;
#X obj 190 151 + 1;
#X obj 163 109 until;
#X msg 205 111 0;
#X obj 163 180 outlet;
#X obj 163 39 inlet;
#X obj 163 87 t a b;
#X connect 0 0 1 0;
#X connect 0 0 4 0;
#X connect 1 0 0 1;
#X connect 2 0 0 0;
#X connect 3 0 0 1;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X connect 6 1 3 0;
#X restore 187 114 pd countto;
#X obj 187 136 t a a;
#X obj 320 213 list prepend;
#X obj 411 213 t a;
#X obj 320 190 tabread \$0-in2;
#X obj 187 190 tabread \$0-in1;
#X obj 187 256 list;
#X obj 187 281 outlet;
#X obj 125 46 t b b b b b;
#X connect 0 0 2 1;
#X connect 0 0 1 0;
#X connect 1 0 0 1;
#X connect 2 0 4 0;
#X connect 3 0 14 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 11 0;
#X connect 7 1 10 0;
#X connect 8 0 9 0;
#X connect 8 0 12 1;
#X connect 9 0 8 1;
#X connect 10 0 8 0;
#X connect 11 0 0 0;
#X connect 12 0 13 0;
#X connect 14 0 2 0;
#X connect 14 1 12 0;
#X connect 14 2 5 0;
#X connect 14 3 0 1;
#X connect 14 4 8 1;
#X restore 150 252 pd tabdump-ins;
#N canvas 414 307 598 380 tabdump-ins 0;
#X obj 187 213 list prepend;
#X obj 278 213 t a;
#X obj 125 254 list;
#X obj 125 23 inlet;
#X obj 125 279 outlet;
#X msg 187 92 64;
#N canvas 0 0 450 300 countto 0;
#X obj 163 151 f 0;
#X obj 190 151 + 1;
#X obj 163 109 until;
#X msg 205 111 0;
#X obj 163 180 outlet;
#X obj 163 39 inlet;
#X obj 163 87 t a b;
#X connect 0 0 1 0;
#X connect 0 0 4 0;
#X connect 1 0 0 1;
#X connect 2 0 0 0;
#X connect 3 0 0 1;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X connect 6 1 3 0;
#X restore 187 114 pd countto;
#X obj 187 136 t a a;
#X obj 320 213 list prepend;
#X obj 411 213 t a;
#X obj 320 190 tabread \$0-in2;
#X obj 187 190 tabread \$0-in1;
#X obj 187 256 list;
#X obj 187 281 outlet;
#X obj 125 46 t b b b b b;
#X connect 0 0 2 1;
#X connect 0 0 1 0;
#X connect 1 0 0 1;
#X connect 2 0 4 0;
#X connect 3 0 14 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 11 0;
#X connect 7 1 10 0;
#X connect 8 0 9 0;
#X connect 8 0 12 1;
#X connect 9 0 8 1;
#X connect 10 0 8 0;
#X connect 11 0 0 0;
#X connect 12 0 13 0;
#X connect 14 0 2 0;
#X connect 14 1 12 0;
#X connect 14 2 5 0;
#X connect 14 3 0 1;
#X connect 14 4 8 1;
#X restore 150 365 pd tabdump-ins;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-out-xfade 64 float 0;
#X coords 0 1 63 -1 128 60 1;
#X restore 365 534 graph;
#X obj 151 582 list-map2;
#X obj 151 610 list prepend 0;
#N canvas 414 307 598 380 tabdump-ins 0;
#X obj 187 213 list prepend;
#X obj 278 213 t a;
#X obj 125 254 list;
#X obj 125 23 inlet;
#X obj 125 279 outlet;
#X msg 187 92 64;
#N canvas 0 0 450 300 countto 0;
#X obj 163 151 f 0;
#X obj 190 151 + 1;
#X obj 163 109 until;
#X msg 205 111 0;
#X obj 163 180 outlet;
#X obj 163 39 inlet;
#X obj 163 87 t a b;
#X connect 0 0 1 0;
#X connect 0 0 4 0;
#X connect 1 0 0 1;
#X connect 2 0 0 0;
#X connect 3 0 0 1;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X connect 6 1 3 0;
#X restore 187 114 pd countto;
#X obj 187 136 t a a;
#X obj 320 213 list prepend;
#X obj 411 213 t a;
#X obj 320 190 tabread \$0-in2;
#X obj 187 190 tabread \$0-in1;
#X obj 187 256 list;
#X obj 187 281 outlet;
#X obj 125 46 t b b b b b;
#X connect 0 0 2 1;
#X connect 0 0 1 0;
#X connect 1 0 0 1;
#X connect 2 0 4 0;
#X connect 3 0 14 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 11 0;
#X connect 7 1 10 0;
#X connect 8 0 9 0;
#X connect 8 0 12 1;
#X connect 9 0 8 1;
#X connect 10 0 8 0;
#X connect 11 0 0 0;
#X connect 12 0 13 0;
#X connect 14 0 2 0;
#X connect 14 1 12 0;
#X connect 14 2 5 0;
#X connect 14 3 0 1;
#X connect 14 4 8 1;
#X restore 151 529 pd tabdump-ins;
#X obj 151 632 s \$0-out-xfade;
#X obj 154 487 hsl 64 15 0 1 0 0 empty empty crossfade_0-1 -2 -8 1
10 -262144 -1 -1 0 1;
#X obj 151 506 t b a;
#N canvas 0 0 450 300 xfade 0;
#X obj 54 131 -;
#X obj 54 155 * 0.5;
#X obj 54 182 +;
#X obj 104 48 inlet;
#X obj 54 48 inlet;
#X obj 54 206 outlet;
#X obj 54 81 unpack 0 0;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 5 0;
#X connect 3 0 1 1;
#X connect 4 0 6 0;
#X connect 6 0 0 0;
#X connect 6 1 0 1;
#X connect 6 1 2 1;
#X restore 234 582 pd xfade;
#X obj 258 520 hsl 64 15 0 1 0 0 empty empty crossfade_0-1 -2 -8 1
10 -262144 -1 -1 0 1;
#X obj 255 539 t b a;
#X obj 298 640 list-inter;
#X text 272 622 this is similar to:;
#X connect 2 0 9 0;
#X connect 2 0 27 0;
#X connect 2 0 28 0;
#X connect 2 0 32 0;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 5 0 12 0;
#X connect 5 0 15 0;
#X connect 8 0 11 0;
#X connect 8 1 14 0;
#X connect 9 0 8 0;
#X connect 9 1 8 1;
#X connect 11 0 26 0;
#X connect 13 0 12 0;
#X connect 14 0 8 2;
#X connect 18 0 19 0;
#X connect 18 1 21 0;
#X connect 19 0 20 0;
#X connect 21 0 18 2;
#X connect 22 0 23 0;
#X connect 22 1 24 0;
#X connect 23 0 25 0;
#X connect 24 0 22 2;
#X connect 27 0 18 0;
#X connect 27 1 18 1;
#X connect 28 0 22 0;
#X connect 28 1 22 1;
#X connect 30 0 31 0;
#X connect 30 1 36 0;
#X connect 31 0 33 0;
#X connect 32 0 30 0;
#X connect 32 1 30 1;
#X connect 34 0 35 0;
#X connect 35 0 32 0;
#X connect 35 1 36 1;
#X connect 36 0 30 2;
#X connect 37 0 38 0;
#X connect 38 0 30 0;
#X connect 38 1 36 1;
#X restore 69 575 pd more-examples;
#X text 67 217 bang will redo the last two lists;
#X text 324 391 If the second list is too short \, its final element
will be repeated:;
#X text 65 22 [list-map2] - map an operation on element pairs from
two lists.;
#X text 67 606 2007 Frank Barknecht;
#N canvas 510 66 494 396 META 0;
#X text 12 25 LICENSE SIBSD;
#X text 12 165 AUTHOR Frank Barknecht;
#X text 12 185 HELP_PATCH_AUTHORS Frank Barknecht. "pd meta" information
added by Jonathan Wilkes for Pd version 0.42.;
#X text 12 5 KEYWORDS control list_op;
#X text 12 85 INLET_1 anything;
#X text 12 125 OUTLET_0 list;
#X text 12 45 DESCRIPTION map an operation on element pairs from two
lists;
#X text 12 65 INLET_0 bang anything;
#X text 12 105 INLET_2 anything;
#X text 12 145 OUTLET_1 list;
#X restore 663 601 pd META;
#X msg 325 534;
#X msg 72 538;
#X msg 67 256 1 2 3 4;
#X connect 0 0 22 2;
#X connect 1 0 0 1;
#X connect 5 0 22 0;
#X connect 6 0 22 1;
#X connect 7 0 17 0;
#X connect 8 0 24 0;
#X connect 9 0 37 0;
#X connect 10 0 9 0;
#X connect 11 0 24 2;
#X connect 12 0 37 0;
#X connect 13 0 24 0;
#X connect 14 0 36 0;
#X connect 15 0 14 0;
#X connect 16 0 23 0;
#X connect 17 0 4 0;
#X connect 17 1 3 0;
#X connect 17 1 18 0;
#X connect 18 0 17 2;
#X connect 19 0 17 1;
#X connect 20 0 17 0;
#X connect 21 0 24 1;
#X connect 22 0 2 0;
#X connect 22 1 0 0;
#X connect 22 1 28 0;
#X connect 23 0 15 0;
#X connect 23 1 26 0;
#X connect 24 0 10 0;
#X connect 24 1 11 0;
#X connect 25 0 23 1;
#X connect 26 0 23 2;
#X connect 38 0 22 0;
